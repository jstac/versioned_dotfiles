unbind C-b
set -g prefix C-a

setw -g mode-keys vi

# Switch panes using vi-like bindings

#bind h select-pane -L
#bind l select-pane -R
#bind j select-pane -U
#bind k select-pane -D




# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Now restore clearing function of C-l, but with leader first
bind C-l send-keys 'C-l'


# To reload
bind d source-file ~/.tmux.conf

# # Copy and paste with vi-like bindings, using:
#
# Ctrl-a, Escape         # enter copy mode
## move cursor to the start or end of the desired text string
# v                        # to activate highlighting
## move cursor to cover the requisite string
# y                        # to capture the string
# q                        # exit copy mode
# Ctrl-a, p       # put/paste the text in the desired location

unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


# Bind m to zoom (think maximize) because z is awkward
unbind m
bind m resize-pane -Z

# Open new window / pane in current dir
bind c new-window -c "#{pane_current_path}"

set -g default-terminal "screen-256color"

source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

